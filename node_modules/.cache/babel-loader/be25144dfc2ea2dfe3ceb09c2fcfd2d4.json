{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dloyn\\\\OneDrive\\\\Escritorio\\\\projects\\\\React\\\\R-P-S\\\\rock-paper-scissor\\\\src\\\\component\\\\app\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport LogoAndScore from '../logoAndScore/logoAndScore';\nimport Rules from '../Rules/Rules';\nimport Options from '../../hooks/options/options';\nconst ExternalWrapper = styled.div`\nheight:100%;\nwidth:100%;\ndisplay:grid;\n\njustify-content:center;\nmargin-top:3%;\n\n`;\nconst InternalWrapper = styled.div`\nopacity:${props => props.opacity};\ntransition:1s;\n`;\n\nfunction App() {\n  useEffect(() => {\n    changeDisplay();\n  }, []);\n  const [opacity, setOpacity] = useState('0.5');\n  const [display, setDisplay] = useState(true);\n\n  const changeDisplay = displayValue => {\n    if (!displayValue) {\n      setDisplay(displayValue);\n      setOpacity('0.5');\n    } else if (displayValue) {\n      setDisplay(displayValue);\n      setOpacity('1');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ExternalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InternalWrapper, {\n    opacity: opacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LogoAndScore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Rules, {\n    changeDisplay: changeDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dloyn/OneDrive/Escritorio/projects/React/R-P-S/rock-paper-scissor/src/component/app/App.js"],"names":["React","useState","useEffect","styled","LogoAndScore","Rules","Options","ExternalWrapper","div","InternalWrapper","props","opacity","App","changeDisplay","setOpacity","display","setDisplay","displayValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,WAAP;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;CAAnC;AAUA,MAAMC,eAAe,GAAGN,MAAM,CAACK,GAAI;UACzBE,KAAK,IAAIA,KAAK,CAACC,OAAQ;;CADjC;;AAMA,SAASC,GAAT,GAAe;AACbV,EAAAA,SAAS,CAAE,MAAM;AACfW,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACF,OAAD,EAAUG,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMY,aAAa,GAAII,YAAD,IAAkB;AACtC,QAAG,CAACA,YAAJ,EAAiB;AACfD,MAAAA,UAAU,CAACC,YAAD,CAAV;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGM,IAAGG,YAAH,EAAgB;AACpBD,MAAAA,UAAU,CAACC,YAAD,CAAV;AACAH,MAAAA,UAAU,CAAC,GAAD,CAAV;AACD;AACF,GARD;;AAYA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEH,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport LogoAndScore from '../logoAndScore/logoAndScore'\nimport Rules from '../Rules/Rules'\nimport Options from '../../hooks/options/options'\n\nconst ExternalWrapper = styled.div`\nheight:100%;\nwidth:100%;\ndisplay:grid;\n\njustify-content:center;\nmargin-top:3%;\n\n`\n\nconst InternalWrapper = styled.div`\nopacity:${props => props.opacity};\ntransition:1s;\n`\n\n\nfunction App() {\n  useEffect( () => {\n    changeDisplay() \n  }, [])\n\n  const [opacity, setOpacity] = useState('0.5')\n  const [display, setDisplay] = useState(true)\n\n  const changeDisplay = (displayValue) => {\n    if(!displayValue){\n      setDisplay(displayValue)\n      setOpacity('0.5')\n    }else if(displayValue){\n      setDisplay(displayValue)\n      setOpacity('1')\n    }\n  }\n\n\n\n  return (\n    <ExternalWrapper>\n      <InternalWrapper opacity={opacity}>\n        <LogoAndScore/>\n      </InternalWrapper>\n      <Rules changeDisplay={changeDisplay}/>\n    </ExternalWrapper>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}